import telebot
from telebot import types


bot = telebot.TeleBot(token='7472414373:AAF647-31cEXhFW-asmoig-0XT5PMNxEeD4')


user_data = {}
saved_data = {}

admin_user_id = '581487107'


@bot.message_handler(commands=['help'])
def line_call(call):
    bot.send_message(call.chat.id, f'–û—Å—å —Ç–µ–ª–µ–≥—Ä–∞–º –∞–¥–º—ñ–Ω–∞ —Ü—å–æ–≥–æ –±–æ—Ç–∞ @kirsan04')


@bot.message_handler(commands=['start'])
def start_handler(message):

    text = (
        "–ü—Ä–∏–≤—ñ—Ç ‚ú®\n"
        "–ù–∞ –∑–≤ º—è–∑–∫—É –û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è –ü–æ–≥–∞–Ω–æ–≥–æ –ì—É–º–æ—Ä—Éü•≥\n"
        "–¶–µ –±–æ—Ç, –∑–∞–≤–¥—è–∫–∏ —è–∫–æ–º—É —Ç–∏ –º–æ–∂–µ—à –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è –Ω–∞ –∑–∞—Ö—ñ–¥üí´\n\n"
        "–Ø–∫–∏–π –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è: 05.10.24\n"
        "–ß–∞—Å: 18:30, open door 18:00\n"
        "–ú—ñ—Å—Ü–µ: Sova Karaoke Bar in Ko≈°ice\n"
        "–í—Ö—ñ–¥: 5‚Ç¨, 20% –∑ —è–∫–∏—Ö –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏ –ó–°–£üá∫üá¶"
    )


    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    continue_button = types.KeyboardButton("–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏")
    markup.add(continue_button)


    bot.send_message(message.chat.id, text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏")
def handle_continue(message):

    bot.send_message(message.chat.id, "–î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æ –Ω–∞—à–µ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ. –Ø–∫ —Ç–µ–±–µ –∑–≤—É—Ç—å? (–Ü–º º—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ)ü§ô")
    bot.register_next_step_handler(message, ask_participants)


def ask_participants(message):
    user_data[message.chat.id] = {'name': message.text}  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('1', callback_data='1'))
    markup.add(types.InlineKeyboardButton('2', callback_data='2'))
    markup.add(types.InlineKeyboardButton('3', callback_data='3'))
    markup.add(types.InlineKeyboardButton('4', callback_data='4'))
    markup.add(types.InlineKeyboardButton('–ë—ñ–ª—å—à–µ', callback_data='more_action'))  # –ó–º—ñ–Ω–µ–Ω–æ –Ω–∞ 'more_action'


    bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥–µ–π, —è–∫—ñ –±—É–¥—É—Ç—å –∑ —Ç–æ–±–æ—é (–≤–∫–ª—é—á–Ω–æ):', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data.isdigit():
        user_data[call.message.chat.id]['participants'] = call.data
        finalize_registration(call.message)
    elif call.data == 'more_action':

        bot.send_message(call.message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ç–æ—á–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤:")
        bot.register_next_step_handler(call.message, handle_custom_count)


    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)


def handle_custom_count(message):
    try:
        count = int(message.text)
        user_data[message.chat.id]['participants'] = count
        finalize_registration(message)
    except ValueError:
        bot.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ.")


def finalize_registration(message):
    user_id = message.chat.id
    user_info = user_data.get(user_id, {})
    name = user_info.get('name')
    participants = user_info.get('participants')


    bot.send_message(message.chat.id,
                     f"–¢–≤–æ—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ‚úÖ\n"
                     f"–Ü–º'—è: {name}\n"
                     f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤: {participants}\n\n"
                     "–ß–µ–∫–∞—î–º–æ –Ω–∞ –∑—É—Å—Ç—Ä—ñ—á –∑ —Ç–æ–±–æ—é üòå\n\n"
                     "P.S: –ó–∞ 24 –≥–æ–¥–∏–Ω–∏ –¥–æ –∑–∞—Ö–æ–¥—É —Ç–æ–±—ñ –ø—Ä–∏–π–¥–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, "
                     "—â–æ–± –≤–ø–µ–≤–Ω–∏—Ç–∏—Å—è, —â–æ —Ç–∏ –∑ –Ω–µ—Ç–µ—Ä–ø—ñ–Ω–Ω—è–º —á–µ–∫–∞—î—à –Ω–∞ –Ω–∞—à —Ä–æ–∑–π–æ–±–Ω–∏–π —Å—Ç–µ–Ω–¥–∞–øü•≥")


    bot.send_message(admin_user_id, f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.chat.username} –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è:\n–Ü–º'—è: {name}\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–∞—Å–Ω–∏–∫—ñ–≤: {participants}")


    del user_data[user_id]


bot.polling(non_stop=True)
